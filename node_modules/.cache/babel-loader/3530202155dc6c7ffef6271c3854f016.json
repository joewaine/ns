{"remainingRequest":"/Users/joewaine/netstage/node_modules/babel-loader/lib/index.js!/Users/joewaine/netstage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/joewaine/netstage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joewaine/netstage/src/components/Products.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/joewaine/netstage/src/components/Products.vue","mtime":1591749785280},{"path":"/Users/joewaine/netstage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joewaine/netstage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/joewaine/netstage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joewaine/netstage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2pvZXdhaW5lL25ldHN0YWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQcm9kdWN0cycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHByb2R1Y3Q6IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBwcmljZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnCiAgICAgIH0sCiAgICAgIHByb2R1Y3RzOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZFByb2R1Y3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9hZGRQcm9kdWN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRodHRwLnBvc3QoIi9wcm9kdWN0L2FkZHByb2R1Y3QiLCB0aGlzLnByb2R1Y3QpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgc3dhbCgiRXJyb3IiLCAiU29tZXRoaW5nIFdlbnQgV3JvbmciLCAiZXJyb3IiKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwLnJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHRoaXMuZ2V0QWxsUHJvZHVjdHMoKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMCwgNl1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYWRkUHJvZHVjdCgpIHsKICAgICAgICByZXR1cm4gX2FkZFByb2R1Y3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFkZFByb2R1Y3Q7CiAgICB9KCksCiAgICBnZXRBbGxQcm9kdWN0czogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEFsbFByb2R1Y3RzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYWxsIHByb2R1Y3RncyBsaXN0ZXMnKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRodHRwLmdldCgiL3Byb2R1Y3QvYWxscHJvZHVjdHMiKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMucHJvZHVjdHMgPSByZXNwb25zZS5kYXRhLnByb2R1Y3RzOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBzd2FsKCJFcnJvciIsICJTb21ldGhpbmcgV2VudCBXcm9uZyIsICJlcnJvciIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwLnJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcywgW1sxLCA4XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRBbGxQcm9kdWN0cygpIHsKICAgICAgICByZXR1cm4gX2dldEFsbFByb2R1Y3RzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRBbGxQcm9kdWN0czsKICAgIH0oKSwKICAgIHJlbW92ZVByb2R1Y3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yZW1vdmVQcm9kdWN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMocHJvZHVjdElkKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kaHR0cC5wb3N0KCcvcHJvZHVjdC8nICsgcHJvZHVjdElkKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0QWxsUHJvZHVjdHMoKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgc3dhbCgiRXJyb3IiLCAiU29tZXRoaW5nIFdlbnQgV3JvbmciLCAiZXJyb3IiKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0My50MC5yZXNwb25zZSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMsIFtbMCwgOF1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVtb3ZlUHJvZHVjdChfeCkgewogICAgICAgIHJldHVybiBfcmVtb3ZlUHJvZHVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gcmVtb3ZlUHJvZHVjdDsKICAgIH0oKQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0QWxsUHJvZHVjdHMoKTsKICB9Cn07"},{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA;AAHA,OADA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,KAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,EAAA,KAAA,OAAA,CAHA;;AAAA;AAGA,gBAAA,QAHA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQA,gBAAA,IAAA,CAAA,OAAA,EAAA,sBAAA,EAAA,OAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,YAAA,QAAA;;AATA;AAWA,qBAAA,cAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAaA,IAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,gBAAA,OAAA,CAAA,GAAA,CAAA,sBAAA;AAfA;AAAA;AAAA,uBAiBA,KAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,CAjBA;;AAAA;AAiBA,gBAAA,QAjBA;AAkBA,qBAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA;AAlBA;AAAA;;AAAA;AAAA;AAAA;AAqBA,gBAAA,IAAA,CAAA,OAAA,EAAA,sBAAA,EAAA,OAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,aAAA,QAAA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBA,IAAA,aAzBA;AAAA;AAAA;AAAA,gDAyBA,SAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA6BA,KAAA,KAAA,CAAA,IAAA,CAAA,cAAA,SAAA,CA7BA;;AAAA;AA6BA,gBAAA,QA7BA;AA+BA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AAEA,qBAAA,cAAA;AAjCA;AAAA;;AAAA;AAAA;AAAA;AAmCA,gBAAA,IAAA,CAAA,OAAA,EAAA,sBAAA,EAAA,OAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,aAAA,QAAA;;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAZA;AAsDA,EAAA,OAtDA,qBAsDA;AACA,SAAA,cAAA;AAEA;AAzDA,CAAA","sourcesContent":["<template>\n    <div>\n    \n\n<div v-for=\"product in products\">\n\n<h4>{{product.name}}</h4>\n{{product._id}}\n\n<p>{{product.description}}</p>\n\n{{product.price}}\n\n\n<button @click=\"removeProduct(product._id)\">remove</button>\n\n</div>\n\n\n\n        <form\n          class=\"text-center border border-primary p-5\"\n          style=\"margin-top:70px;height:auto;padding-top:100px !important;\"\n          @submit.prevent=\"addProduct\"\n        >\n          <input\n            class=\"form-control mb-5\"\n            placeholder=\"Name\"\n            v-model=\"product.name\"\n            required\n          />\n          <input\n            class=\"form-control mb-5\"\n            placeholder=\"description\"\n            v-model=\"product.description\"\n            required\n          />\n\n          <!-- Password -->\n          <input\n            class=\"form-control mb-5\"\n            placeholder=\"price\"\n            v-model=\"product.price\"\n          />\n          <p>\n          <!-- Sign in button -->\n            <center>\n              <button class=\"btn btn-primary btn-block w-75 my-4\" type=\"submit\">\n               add product\n              </button>\n            </center>\n          </p>\n        </form>\n\n\n\n\n\n\n    </div>\n</template>\n\n<script>\n\n\n\n\nexport default {\nname: 'Products',\n  data () {\n    return {\n      product: {\n          name: '',\n          price: '',\n          description: ''\n      },\n      products: ''\n    }\n  },\nmethods: {\n    async addProduct() {\n      try {\n        let response = await this.$http.post(\"/product/addproduct\", this.product);\n\n        // console.log(response)\n\n        } catch (err) {\n        swal(\"Error\", \"Something Went Wrong\", \"error\");\n        console.log(err.response);\n      }\n      this.getAllProducts();\n    },\n    async getAllProducts() {\n\n         console.log('all productgs listes')\n      try {\n        let response = await this.$http.get(\"/product/allproducts\");\n          this.products = response.data.products\n\n      } catch (err) {\n               swal(\"Error\", \"Something Went Wrong\", \"error\");\n        console.log(err.response);\n      }\n    },\n    async removeProduct(productId){\n\n\n    try {\n      let response = await this.$http.post('/product/' + productId) \n     \n      console.log(response)\n\n    this.getAllProducts();\n    } catch (err) {\n               swal(\"Error\", \"Something Went Wrong\", \"error\");\n        console.log(err.response);\n      }\n\n    },\n\n  },\n    created() {\n    this.getAllProducts();\n\n  }\n\n\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}